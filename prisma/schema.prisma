// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  name      String?
  password  String

  Prestamo Prestamo[]
}

model Item {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String
  category    String
  department  String

  CeldaItem CeldaItem[]
  Prestamo  Prestamo[]
}

model Celda {
  id Int @id @default(autoincrement())

  CeldaItem CeldaItem[]
}

model CeldaItem {
  id         Int   @id @default(autoincrement())
  Item       Item  @relation(fields: [itemId], references: [id])
  itemId     Int
  Celda      Celda @relation(fields: [celdaId], references: [id])
  celdaId    Int
  existencia Int
}

model Tag {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  color       String

  PrestamoTag PrestamoTag[]
}

model Prestamo {
  id              Int           @id @default(autoincrement())
  Cantidad        Int
  FechaPrestamo   DateTime      @default(now())
  FechaDevolucion DateTime?
  Item            Item          @relation(fields: [itemId], references: [id])
  itemId          Int
  User            User          @relation(fields: [userId], references: [id])
  userId          Int
  PrestamoTag     PrestamoTag[]
}

model PrestamoTag {
  id         Int      @id @default(autoincrement())
  Prestamo   Prestamo @relation(fields: [prestamoId], references: [id])
  prestamoId Int
  Tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      Int
}

// Telemetry

model Telemetry {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  description String
  status      String
}
